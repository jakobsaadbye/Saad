Vector2 :: struct {
    x : float;
    y : float;
}

Node :: struct {
    data : int;
    next : *Node;
}

main:: () {

    // Changing value of struct field through pointer
    {
        v : Vector2;
    
        ptr := &v.x;
        ptr = 1.0;
        ptr = &v.y;
        ptr = 3.0;
    
        assert(v.x == 1.0);
        assert(v.y == 3.0);
    }

    // Dereference and change of value through pointer on a struct field
    {
        n1 : Node;
        n2 : Node;
        n3 : Node;
    
        n1.data = 1;
        n2.data = 2;
        n3.data = 37;
        n1.next = &n2;
        n2.next = &n3;
        n3.next = &n1;
        
        assert(n1.next.next == &n3);
    }
    
    // ptr0 := &n1;
    // ptr1 := &ptr0;
    // ptr2 := &ptr1;
    // print(ptr2.data); // Should be 69

    // cursor := &n1;
    // for 0..10 {
    //     print(cursor.data);
    //     cursor = cursor.next;

    // }
}


