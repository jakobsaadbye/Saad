DogKind :: enum {
    samoid,
    chiwawa,
    bulldog,
}

Dog :: struct {
    kind : DogKind;
}

Status :: enum {
    ok = 1,
    created,

    bad_request = 400,
    permission_denied,
    payment_required,
    forbidden,
    not_found,
    method_not_allowed = xx (xx Status.bad_request + 5),
}

main :: () {
    // Checking enum values in struct + enum arithmetic
    dog1 := Dog{ .samoid };
    dog2 := Dog{ .bulldog };

    // Checking Auto-increment and const-expr inside enum
    assert(Status.ok == 1);
    assert(Status.created == 2);
    assert(Status.bad_request == 400);
    assert(Status.permission_denied == 401);
    assert(Status.permission_denied == 401);
    assert(Status.method_not_allowed == 405);
}